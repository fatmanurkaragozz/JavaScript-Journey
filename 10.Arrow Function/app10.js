// Geleneksel fonksiyon tanÄ±mlama yÃ¶ntemi (Function Declaration)
function yazdir() {
    console.log("Merhaba")
}
yazdir() // Fonksiyon Ã§aÄŸrÄ±ldÄ±ÄŸÄ±nda "Merhaba" yazdÄ±rÄ±r

// ARROW FUNCTION

// 1. Arrow Function ile fonksiyon tanÄ±mlama
const yazdir2 = () => {
    console.log("Merhaba")
}
yazdir2() // Fonksiyon Ã§aÄŸrÄ±ldÄ±ÄŸÄ±nda "Merhaba" yazdÄ±rÄ±r

// 2. Arrow Function: Parametre alan versiyon
const yazdir3 = (firstName) => {
    console.log("Merhaba", firstName)
}
yazdir3("FatmaNur") // Ã‡Ä±ktÄ±: "Merhaba FatmaNur"

// 3. Arrow Function: Birden fazla parametre alan versiyon (Tek satÄ±rda yazÄ±m)
const yazdir4 = (firstName, lastName) => console.log("Hello", firstName, lastName)
yazdir4("FatmaNur", "Karagoz") // Ã‡Ä±ktÄ±: "Hello FatmaNur Karagoz"

// 4. Arrow Function: Tek parametre iÃ§in parantez zorunlu deÄŸil
const kupAl = x => x * x * x  // x'in kÃ¼pÃ¼nÃ¼ alÄ±r (Tek satÄ±r olduÄŸundan sÃ¼slÃ¼ parantez gerekmez)
const kareAl = (x) => x * x   // x'in karesini alÄ±r (Tek parametre olmasÄ±na raÄŸmen parantez kullanÄ±labilir)

console.log("DeÄŸer: " + kupAl(8)); // Ã‡Ä±ktÄ±: "DeÄŸer: 512"
console.log("DeÄŸer: " + kareAl(5)); // Ã‡Ä±ktÄ±: "DeÄŸer: 25"

function topla1(a, b) {
    return a + b;
}
console.log(topla1(5, 3)); // Ã‡Ä±ktÄ±: 8

const topla2 = (a, b) => a + b;
console.log(topla2(5, 3)); // Ã‡Ä±ktÄ±: 8
// GÃ¶rdÃ¼ÄŸÃ¼nÃ¼z gibi arrow function daha kÄ±sa ve okunaklÄ± bir yazÄ±m sunuyor! ğŸš€